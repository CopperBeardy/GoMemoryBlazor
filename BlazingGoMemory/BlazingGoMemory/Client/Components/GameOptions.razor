<h3>GameOptions</h3>


<h3>Select Difficulty</h3>
<label class="radio-inline"><input type="radio" @onchange="ChangeOption" value="Easy" name="difficulty">Easy</label>
<label class="radio-inline"><input type="radio" @onchange="ChangeOption" value="Normal" name="difficulty" checked>Normal</label>
<label class="radio-inline"><input type="radio" @onchange="ChangeOption" value="Hard" name="difficulty">Hard</label>

<button @onclick="OptionsSelected" type="submit">Play</button>


@code {
    [CascadingParameter]
    public Game Game { get; set; }

    [Parameter]
    public EventCallback<bool> OptionsSet { get; set; }

    protected override Task OnInitializedAsync()
    {
        Game.GameSettings.Difficulty = ModeDifficulty.Normal;
        Game.GameSettings.MaxLevel = 20;
        Game.GameSettings.SurfaceSize = 5;
        Game.GameSettings.MaxTokens = 25;
        return base.OnInitializedAsync();
    }

    public Task OptionsSelected()
    {

        return OptionsSet.InvokeAsync(false);
    }

    public void ChangeOption(ChangeEventArgs change)
    {

        var difficulty = (ModeDifficulty)Enum.Parse(typeof(ModeDifficulty), change.Value.ToString());
        switch (difficulty)
        {
            case ModeDifficulty.Easy:
                Game.GameSettings.Difficulty = ModeDifficulty.Easy;
                Game.GameSettings.MaxLevel = 10;
                Game.GameSettings.SurfaceSize = 4;
                Game.GameSettings.MaxTokens = 16;
                break;
            case ModeDifficulty.Normal:
                Game.GameSettings.Difficulty = ModeDifficulty.Normal;
                Game.GameSettings.MaxLevel = 20;
                Game.GameSettings.SurfaceSize = 5;
                Game.GameSettings.MaxTokens = 25;
                break;
            case ModeDifficulty.Hard:
                Game.GameSettings.Difficulty = ModeDifficulty.Hard;
                Game.GameSettings.MaxLevel = 30;
                Game.GameSettings.MaxTokens = 36;
                Game.GameSettings.SurfaceSize = 6;
                break;
            default:
                break;
        }

    }
}
